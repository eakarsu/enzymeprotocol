/* eslint-disable */
// @ts-nocheck
import { BytesLike, BigNumber, BigNumberish } from 'ethers';
import { contract, Call, Send, AddressLike, Contract } from '@enzymefinance/ethers';

export type ManagementFeeArgs = [_feeManager: AddressLike];

// prettier-ignore
export interface ManagementFee extends Contract<ManagementFee> {
  activateForFund: Send<(_comptrollerProxy: AddressLike, _vaultProxy: AddressLike) => void, ManagementFee>
  addFundSettings: Send<(_comptrollerProxy: AddressLike, _settingsData: BytesLike) => void, ManagementFee>
  getFeeInfoForFund: Call<(_comptrollerProxy: AddressLike) => { scaledPerSecondRate: BigNumber, lastSettled: BigNumber }, ManagementFee>
  getFeeManager: Call<() => string, ManagementFee>
  getRecipientForFund: Call<(_comptrollerProxy: AddressLike) => string, ManagementFee>
  payout: Send<(arg0: AddressLike, arg1: AddressLike) => boolean, ManagementFee>
  setRecipientForFund: Send<(_comptrollerProxy: AddressLike, _recipient: AddressLike) => void, ManagementFee>
  settle: Send<(_comptrollerProxy: AddressLike, _vaultProxy: AddressLike, arg2: BigNumberish, arg3: BytesLike, arg4: BigNumberish) => { settlementType_: BigNumber, '1': string, sharesDue_: BigNumber }, ManagementFee>
  settlesOnHook: Call<(_hook: BigNumberish) => { settles_: boolean, usesGav_: boolean }, ManagementFee>
  update: Send<(arg0: AddressLike, arg1: AddressLike, arg2: BigNumberish, arg3: BytesLike, arg4: BigNumberish) => void, ManagementFee>
  updatesOnHook: Call<(arg0: BigNumberish) => { updates_: boolean, usesGav_: boolean }, ManagementFee>
}

let ManagementFeeBytecode: string | undefined = undefined;
if (typeof window === 'undefined') {
  ManagementFeeBytecode =
    '0x60a06040523480156200001157600080fd5b506040516200165d3803806200165d83398101604081905262000034916200005d565b60601b6001600160601b031916608052620000b2565b8051620000578162000098565b92915050565b6000602082840312156200007057600080fd5b60006200007e84846200004a565b949350505050565b60006001600160a01b03821662000057565b620000a38162000086565b8114620000af57600080fd5b50565b60805160601c61157e620000df600039806101ce528061049652806106115280610a20525061157e6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806362780b3c1161007157806362780b3c14610135578063877fd473146101555780638c55f80f14610175578063b78b481314610188578063e337a91f146101a8578063f2d63826146101bb576100a9565b80630f5f6b4f146100ae578063233faf5f146100c35780633146d058146100d6578063320f0ddd146100e957806341892d7e14610113575b600080fd5b6100c16100bc366004610eef565b6101c3565b005b6100c16100d1366004610e5f565b610483565b6100c16100e4366004610e25565b61048b565b6100fc6100f7366004610f45565b6105a7565b60405161010a9291906111fe565b60405180910390f35b610126610121366004610e5f565b610602565b60405161010a9392919061122a565b610148610143366004610de1565b610895565b60405161010a91906111e2565b610168610163366004610de1565b6108a8565b60405161010a91906112f2565b6100c1610183366004610e25565b6108f2565b61019b610196366004610e25565b610a0d565b60405161010a91906111f0565b6100fc6101b6366004610f45565b610a16565b610148610a1e565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102145760405162461bcd60e51b815260040161020b906112b2565b60405180910390fd5b6102526040518060400160405280601d81526020017f4d616e6167656d656e744665653a61646446756e6453657474696e6773000000815250610a42565b61029182828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a8892505050565b6000806102a083850185610f63565b915091506102cf60405180606001604052806034815260200161147b60349139836001600160801b0316610acb565b6102f16040518060600160405280602a815260200161151f602a913982610b10565b6000826001600160801b03161161031a5760405162461bcd60e51b815260040161020b906112d2565b61033b6040518060600160405280602b8152602001611421602b9139610a42565b6040805180820182526001600160801b038085168252600060208084018281526001600160a01b038b16835260018252918590209351845492518416600160801b029084166fffffffffffffffffffffffffffffffff19909316929092179092161790915581516060810190925260378083526103bf92916114e890830139610a42565b846001600160a01b03167f43e2539cfab38f0e3b5d0648103e367b0d65bdc181c37c6753066ba4e79f05b2836040516103f89190611300565b60405180910390a26104216040518060600160405280602f815260200161144c602f9139610a42565b6001600160a01b0381161561047c576104516040518060600160405280603981526020016114af60399139610a42565b61045b8582610b55565b61047c6040518060600160405280603781526020016113ea60379139610a42565b5050505050565b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104d35760405162461bcd60e51b815260040161020b906112b2565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561050e57600080fd5b505afa158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190610f82565b11156105a3576001600160a01b03821660008181526001602052604080822080546001600160801b03428116600160801b029116179055517f8f1e8a779dce142f8b8b45e1747798edee9623be81f2f411496f3b49eb67bc369190a25b5050565b60008060018360038111156105b857fe5b14806105cf575060038360038111156105cd57fe5b145b806105e5575060008360038111156105e357fe5b145b156105f657506001905060006105fd565b5060009050805b915091565b60008080336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461064e5760405162461bcd60e51b815260040161020b906112b2565b6001600160a01b03891660009081526001602052604081208054909190610686904290600160801b90046001600160801b0316610bac565b90508061069f5760008060009450945094505050610889565b60008a90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190610f82565b905080156107f95760006107a7836001600160a01b03166370a082318f6040518263ffffffff1660e01b815260040161075091906111e2565b60206040518083038186803b15801561076857600080fd5b505afa15801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190610f82565b8390610bac565b905080156107f75784546107f4906b033b2e3c9fd0803ce8000000906107ee906107e79083906107e1906001600160801b03168a83610bd4565b90610bac565b8490610c94565b90610cce565b95505b505b6001600160a01b038d166000818152600160205260409081902080546001600160801b03428116600160801b029116179055517f468aeeec0e901c52363552a06c1e39331d44c3cc886eb200af127ded3f380f829061085b908890879061130e565b60405180910390a28461087c57600080600096509650965050505050610889565b6002600096509650505050505b96509650969350505050565b60006108a082610d00565b90505b919050565b6108b0610d3f565b506001600160a01b03166000908152600160209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b816001600160a01b031663c98091876040518163ffffffff1660e01b815260040160206040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190610e07565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561099b57600080fd5b505afa1580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190610e07565b6001600160a01b0316336001600160a01b031614610a035760405162461bcd60e51b815260040161020b906112e2565b6105a38282610b55565b60005b92915050565b600080915091565b7f000000000000000000000000000000000000000000000000000000000000000090565b610a8581604051602401610a569190611219565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610d1e565b50565b610a8581604051602401610a9c9190611219565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b179052610d1e565b6105a38282604051602401610ae1929190611272565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610d1e565b6105a38282604051602401610b26929190611252565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610d1e565b6001600160a01b0382811660008181526020819052604080822080546001600160a01b0319169486169485179055517fa11fc98cfb391622348acc16de92f0efb77d55f71a6e9fa18bfef387ae8d19ce9190a35050565b600082821115610bce5760405162461bcd60e51b815260040161020b90611292565b50900390565b6000838015610c7557600184168015610bef57859250610bf3565b8392505b50600283046002850494505b8415610c6f578586028687820414610c1657600080fd5b81810181811015610c2657600080fd5b85810497506002870615610c62578785028589820414158915151615610c4b57600080fd5b83810181811015610c5b57600080fd5b8790049550505b5050600285049450610bff565b50610c8b565b838015610c855760009250610c89565b8392505b505b505b9392505050565b600082610ca357506000610a10565b82820282848281610cb057fe5b0414610c8d5760405162461bcd60e51b815260040161020b906112c2565b6000808211610cef5760405162461bcd60e51b815260040161020b906112a2565b818381610cf857fe5b049392505050565b6001600160a01b039081166000908152602081905260409020541690565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b604080518082019091526000808252602082015290565b8035610a10816113b6565b8051610a10816113b6565b60008083601f840112610d7e57600080fd5b50813567ffffffffffffffff811115610d9657600080fd5b602083019150836001820283011115610dae57600080fd5b9250929050565b8035610a10816113ca565b8035610a10816113d7565b8035610a10816113e0565b8051610a10816113e0565b600060208284031215610df357600080fd5b6000610dff8484610d56565b949350505050565b600060208284031215610e1957600080fd5b6000610dff8484610d61565b60008060408385031215610e3857600080fd5b6000610e448585610d56565b9250506020610e5585828601610d56565b9150509250929050565b60008060008060008060a08789031215610e7857600080fd5b6000610e848989610d56565b9650506020610e9589828a01610d56565b9550506040610ea689828a01610db5565b945050606087013567ffffffffffffffff811115610ec357600080fd5b610ecf89828a01610d6c565b93509350506080610ee289828a01610dcb565b9150509295509295509295565b600080600060408486031215610f0457600080fd5b6000610f108686610d56565b935050602084013567ffffffffffffffff811115610f2d57600080fd5b610f3986828701610d6c565b92509250509250925092565b600060208284031215610f5757600080fd5b6000610dff8484610db5565b60008060408385031215610f7657600080fd5b6000610e448585610dc0565b600060208284031215610f9457600080fd5b6000610dff8484610dd6565b610fa981611336565b82525050565b610fa981611341565b6000610fc382611329565b610fcd818561132d565b9350610fdd818560208601611376565b610fe6816113a2565b9093019392505050565b610fa98161136b565b6000611006601e8361132d565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b600061103f601a8361132d565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000815260200192915050565b600061107860258361132d565b7f4f6e6c7920746865204665654d616e6765722063616e206d616b6520746869738152640818d85b1b60da1b602082015260400192915050565b60006110bf60218361132d565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000611102603b8361132d565b7f61646446756e6453657474696e67733a207363616c65645065725365636f6e6481527f52617465206d7573742062652067726561746572207468616e20300000000000602082015260400192915050565b600061116160308361132d565b7f5f5f736574526563697069656e74466f7246756e643a204f6e6c79207661756c81526f74206f776e65722063616c6c61626c6560801b602082015260400192915050565b805160408301906111b784826111d0565b5060208201516111ca60208501826111d0565b50505050565b610fa981611350565b610fa981611368565b60208101610a108284610fa0565b60208101610a108284610faf565b6040810161120c8285610faf565b610c8d6020830184610faf565b60208082528101610c8d8184610fb8565b606081016112388286610ff0565b6112456020830185610fa0565b610dff60408301846111d9565b604080825281016112638185610fb8565b9050610c8d6020830184610fa0565b604080825281016112838185610fb8565b9050610c8d60208301846111d9565b602080825281016108a081610ff9565b602080825281016108a081611032565b602080825281016108a08161106b565b602080825281016108a0816110b2565b602080825281016108a0816110f5565b602080825281016108a081611154565b60408101610a1082846111a6565b60208101610a1082846111d0565b6040810161131c82856111d9565b610c8d60208301846111d9565b5190565b90815260200190565b60006108a08261135c565b151590565b806108a3816113ac565b6001600160801b031690565b6001600160a01b031690565b90565b60006108a082611346565b60005b83811015611391578181015183820152602001611379565b838111156111ca5750506000910152565b601f01601f191690565b60068110610a8557fe5b6113bf81611336565b8114610a8557600080fd5b60048110610a8557600080fd5b6113bf81611350565b6113bf8161136856fe4d616e6167656d656e744665653a61646446756e6453657474696e67733a5f5f736574526563697069656e74466f7246756e6420656e644d616e6167656d656e744665653a61646446756e6453657474696e67733a616674657220726571756972654d616e6167656d656e744665653a61646446756e6453657474696e67733a46756e6453657474696e677341646465644d616e6167656d656e744665653a61646446756e6453657474696e67733a7363616c65645065725365636f6e64526174653a25644d616e6167656d656e744665653a61646446756e6453657474696e67733a5f5f736574526563697069656e74466f7246756e6420626567696e4d616e6167656d656e744665653a61646446756e6453657474696e67733a636f6d7074726f6c6c657250726f7879546f466565496e666f4d616e6167656d656e744665653a61646446756e6453657474696e67733a726563697069656e743a2573a26469706673582212205ec9e5cf9857fd5b527ee942389f2e24f9d07a2203b9c02c78bd3548a9d670d164736f6c634300060c0033';
}

// prettier-ignore
export const ManagementFee = contract<ManagementFee, ManagementFeeArgs>(ManagementFeeBytecode)`
  constructor(address _feeManager)
  event ActivatedForMigratedFund(address indexed comptrollerProxy)
  event FundSettingsAdded(address indexed comptrollerProxy, uint128 scaledPerSecondRate)
  event RecipientSetForFund(address indexed comptrollerProxy, address indexed recipient)
  event Settled(address indexed comptrollerProxy, uint256 sharesQuantity, uint256 secondsSinceSettlement)
  function activateForFund(address _comptrollerProxy, address _vaultProxy)
  function addFundSettings(address _comptrollerProxy, bytes _settingsData)
  function getFeeInfoForFund(address _comptrollerProxy) view returns (tuple(uint128 scaledPerSecondRate, uint128 lastSettled) feeInfo_)
  function getFeeManager() view returns (address feeManager_)
  function getRecipientForFund(address _comptrollerProxy) view returns (address recipient_)
  function payout(address, address) returns (bool)
  function setRecipientForFund(address _comptrollerProxy, address _recipient)
  function settle(address _comptrollerProxy, address _vaultProxy, uint8, bytes, uint256) returns (uint8 settlementType_, address, uint256 sharesDue_)
  function settlesOnHook(uint8 _hook) view returns (bool settles_, bool usesGav_)
  function update(address, address, uint8, bytes, uint256)
  function updatesOnHook(uint8) view returns (bool updates_, bool usesGav_)
`;
