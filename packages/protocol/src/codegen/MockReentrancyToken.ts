/* eslint-disable */
// @ts-nocheck
import { BytesLike, BigNumber, BigNumberish } from 'ethers';
import { contract, Call, Send, AddressLike, Contract } from '@enzymefinance/ethers';

// prettier-ignore
export interface MockReentrancyToken extends Contract<MockReentrancyToken> {
  addMinters: Send<(_minters: AddressLike[]) => void, MockReentrancyToken>
  allowance: Call<(owner: AddressLike, spender: AddressLike) => BigNumber, MockReentrancyToken>
  approve: Send<(spender: AddressLike, amount: BigNumberish) => boolean, MockReentrancyToken>
  bad: Call<() => boolean, MockReentrancyToken>
  balanceOf: Call<(account: AddressLike) => BigNumber, MockReentrancyToken>
  burn: Send<(amount: BigNumberish) => void, MockReentrancyToken>
  burnFrom: Send<(account: AddressLike, amount: BigNumberish) => void, MockReentrancyToken>
  comptrollerProxy: Call<() => string, MockReentrancyToken>
  decimals: Call<() => BigNumber, MockReentrancyToken>
  decreaseAllowance: Send<(spender: AddressLike, subtractedValue: BigNumberish) => boolean, MockReentrancyToken>
  increaseAllowance: Send<(spender: AddressLike, addedValue: BigNumberish) => boolean, MockReentrancyToken>
  makeItReentracyToken: Send<(_comptrollerProxy: AddressLike) => void, MockReentrancyToken>
  mint: Send<(_amount: BigNumberish) => void, MockReentrancyToken>
  mintFor: Send<(_who: AddressLike, _amount: BigNumberish) => void, MockReentrancyToken>
  name: Call<() => string, MockReentrancyToken>
  owner: Call<() => string, MockReentrancyToken>
  renounceOwnership: Send<() => void, MockReentrancyToken>
  symbol: Call<() => string, MockReentrancyToken>
  totalSupply: Call<() => BigNumber, MockReentrancyToken>
  transfer: Send<(recipient: AddressLike, amount: BigNumberish) => boolean, MockReentrancyToken>
  transferFrom: Send<(sender: AddressLike, recipient: AddressLike, amount: BigNumberish) => boolean, MockReentrancyToken>
  transferOwnership: Send<(newOwner: AddressLike) => void, MockReentrancyToken>
}

let MockReentrancyTokenBytecode: string | undefined = undefined;
if (typeof window === 'undefined') {
  MockReentrancyTokenBytecode =
    '';
}

// prettier-ignore
export const MockReentrancyToken = contract<MockReentrancyToken>(MockReentrancyTokenBytecode)`
  event Approval(address indexed owner, address indexed spender, uint256 value)
  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
  event Transfer(address indexed from, address indexed to, uint256 value)
  function addMinters(address[] _minters)
  function allowance(address owner, address spender) view returns (uint256)
  function approve(address spender, uint256 amount) returns (bool)
  function bad() view returns (bool)
  function balanceOf(address account) view returns (uint256)
  function burn(uint256 amount)
  function burnFrom(address account, uint256 amount)
  function comptrollerProxy() view returns (address)
  function decimals() view returns (uint8)
  function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)
  function increaseAllowance(address spender, uint256 addedValue) returns (bool)
  function makeItReentracyToken(address _comptrollerProxy)
  function mint(uint256 _amount)
  function mintFor(address _who, uint256 _amount)
  function name() view returns (string)
  function owner() view returns (address)
  function renounceOwnership()
  function symbol() view returns (string)
  function totalSupply() view returns (uint256)
  function transfer(address recipient, uint256 amount) returns (bool)
  function transferFrom(address sender, address recipient, uint256 amount) returns (bool)
  function transferOwnership(address newOwner)
`;
