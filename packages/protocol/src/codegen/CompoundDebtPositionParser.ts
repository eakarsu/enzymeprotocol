/* eslint-disable */
// @ts-nocheck
import { BytesLike, BigNumber, BigNumberish } from 'ethers';
import { contract, Call, Send, AddressLike, Contract } from '@enzymefinance/ethers';

export type CompoundDebtPositionParserArgs = [
  _compoundPriceFeed: AddressLike,
  _compToken: AddressLike,
  _valueInterpreter: AddressLike,
];

// prettier-ignore
export interface CompoundDebtPositionParser extends Contract<CompoundDebtPositionParser> {
  getCompToken: Call<() => string, CompoundDebtPositionParser>
  getCompoundPriceFeed: Call<() => string, CompoundDebtPositionParser>
  getValueInterpreter: Call<() => string, CompoundDebtPositionParser>
  parseAssetsForAction: Send<(arg0: AddressLike, _actionId: BigNumberish, _encodedActionArgs: BytesLike) => { assetsToTransfer_: string[], amountsToTransfer_: BigNumber[], assetsToReceive_: string[] }, CompoundDebtPositionParser>
  parseInitArgs: Send<(arg0: AddressLike, arg1: BytesLike) => string, CompoundDebtPositionParser>
}

let CompoundDebtPositionParserBytecode: string | undefined = undefined;
if (typeof window === 'undefined') {
  CompoundDebtPositionParserBytecode =
    '0x60e060405234801561001057600080fd5b50604051610ad1380380610ad18339818101604052606081101561003357600080fd5b50805160208201516040909201516001600160601b0319606092831b811660a05292821b8316608052901b1660c05260805160601c60a05160601c60c05160601c610a3a6100976000398061039a5250806103525250806103765250610a3a6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806332bf82271461005c57806370a58ec614610080578063875fb4b314610088578063bbd2d64614610090578063db16c72e14610227575b600080fd5b610064610350565b604080516001600160a01b039092168252519081900360200190f35b610064610374565b610064610398565b610149600480360360608110156100a657600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156100d557600080fd5b8201836020820111156100e757600080fd5b803590602001918460018302840111600160201b8311171561010857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103bc945050505050565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015610191578181015183820152602001610179565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156101d05781810151838201526020016101b8565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561020f5781810151838201526020016101f7565b50505050905001965050505050505060405180910390f35b6102db6004803603604081101561023d57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561026757600080fd5b82018360208201111561027957600080fd5b803590602001918460018302840111600160201b8311171561029a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610483945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103155781810151838201526020016102fd565b50505050905090810190601f1680156103425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6060806060806060806103ce87610497565b9250925092506103df888483610679565b8715806103ec5750600388145b156103fc57829550819450610477565b600288148061040b5750600188145b1561041857829350610477565b6004881415610477576040805160018082528183019092529060208083019080368337019050509350610449610374565b8460008151811061045657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b50505093509350939050565b505060408051602081019091526000815290565b60608060608380602001905160608110156104b157600080fd5b8101908080516040519392919084600160201b8211156104d057600080fd5b9083019060208201858111156104e557600080fd5b82518660208202830111600160201b8211171561050157600080fd5b82525081516020918201928201910280838360005b8381101561052e578181015183820152602001610516565b5050505090500160405260200180516040519392919084600160201b82111561055657600080fd5b90830190602082018581111561056b57600080fd5b82518660208202830111600160201b8211171561058757600080fd5b82525081516020918201928201910280838360005b838110156105b457818101518382015260200161059c565b5050505090500160405260200180516040519392919084600160201b8211156105dc57600080fd5b9083019060208201858111156105f157600080fd5b8251600160201b81118282018810171561060a57600080fd5b82525081516020918201929091019080838360005b8381101561063757818101518382015260200161061f565b50505050905090810190601f1680156106645780820380516001836020036101000a031916815260200191505b50604052509398929750909550909350505050565b60028314156108125760005b825181101561076457610696610398565b6001600160a01b0316639be918e68483815181106106b057fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156106f557600080fd5b505afa158015610709573d6000803e3d6000fd5b505050506040513d602081101561071f57600080fd5b505161075c5760405162461bcd60e51b81526004018080602001828103825260278152602001806109de6027913960400191505060405180910390fd5b600101610685565b5061080d81806020019051602081101561077d57600080fd5b8101908080516040519392919084600160201b82111561079c57600080fd5b9083019060208201858111156107b157600080fd5b82518660208202830111600160201b821117156107cd57600080fd5b82525081516020918201928201910280838360005b838110156107fa5781810151838201526020016107e2565b5050505090500160405250505083610838565b610833565b60038314156108335761083381806020019051602081101561077d57600080fd5b505050565b80518251146108785760405162461bcd60e51b81526004018080602001828103825260348152602001806109aa6034913960400191505060405180910390fd5b60005b82518110156108335781818151811061089057fe5b60200260200101516001600160a01b03166108a9610350565b6001600160a01b0316634cae3ad78584815181106108c357fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561090857600080fd5b505afa15801561091c573d6000803e3d6000fd5b505050506040513d602081101561093257600080fd5b50516001600160a01b0316146109795760405162461bcd60e51b81526004018080602001828103825260288152602001806109826028913960400191505060405180910390fd5b60010161087b56fe5f5f76616c696461746543546f6b656e733a2042616420746f6b656e2063546f6b656e20706169725f5f76616c696461746543546f6b656e733a20556e657175616c2061737365747320616e642063546f6b656e73206c656e6774685f5f76616c6964617465416374696f6e446174613a20556e737570706f72746564206173736574a26469706673582212205a691adde99e4eb1e9f8b9a43888fb5e00a4032783a2751f6a6444bbd997315164736f6c634300060c0033';
}

// prettier-ignore
export const CompoundDebtPositionParser = contract<CompoundDebtPositionParser, CompoundDebtPositionParserArgs>(CompoundDebtPositionParserBytecode)`
  constructor(address _compoundPriceFeed, address _compToken, address _valueInterpreter)
  function getCompToken() view returns (address compToken_)
  function getCompoundPriceFeed() view returns (address compoundPriceFeed_)
  function getValueInterpreter() view returns (address valueInterpreter_)
  function parseAssetsForAction(address, uint256 _actionId, bytes _encodedActionArgs) returns (address[] assetsToTransfer_, uint256[] amountsToTransfer_, address[] assetsToReceive_)
  function parseInitArgs(address, bytes) returns (bytes initArgs_)
`;
