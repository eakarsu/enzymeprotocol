/* eslint-disable */
// @ts-nocheck
import { BytesLike, BigNumber, BigNumberish } from 'ethers';
import { contract, Call, Send, AddressLike, Contract } from '@enzymefinance/ethers';

export type SynthetixAdapterArgs = [
  _integrationManager: AddressLike,
  _synthetixPriceFeed: AddressLike,
  _originator: AddressLike,
  _synthetix: AddressLike,
  _trackingCode: BytesLike,
];

// prettier-ignore
export interface SynthetixAdapter extends Contract<SynthetixAdapter> {
  CLAIM_REWARDS_SELECTOR: Call<() => string, SynthetixAdapter>
  LEND_AND_STAKE_SELECTOR: Call<() => string, SynthetixAdapter>
  LEND_SELECTOR: Call<() => string, SynthetixAdapter>
  REDEEM_SELECTOR: Call<() => string, SynthetixAdapter>
  STAKE_SELECTOR: Call<() => string, SynthetixAdapter>
  TAKE_ORDER_SELECTOR: Call<() => string, SynthetixAdapter>
  UNSTAKE_AND_REDEEM_SELECTOR: Call<() => string, SynthetixAdapter>
  UNSTAKE_SELECTOR: Call<() => string, SynthetixAdapter>
  getIntegrationManager: Call<() => string, SynthetixAdapter>
  getSynthetix: Call<() => string, SynthetixAdapter>
  getSynthetixOriginator: Call<() => string, SynthetixAdapter>
  getSynthetixPriceFeed: Call<() => string, SynthetixAdapter>
  getSynthetixTrackingCode: Call<() => string, SynthetixAdapter>
  parseAssetsForAction: Call<(arg0: AddressLike, _selector: BytesLike, _actionData: BytesLike) => { spendAssetsHandleType_: BigNumber, spendAssets_: string[], spendAssetAmounts_: BigNumber[], incomingAssets_: string[], minIncomingAssetAmounts_: BigNumber[] }, SynthetixAdapter>
  takeOrder: Send<(_vaultProxy: AddressLike, _actionData: BytesLike, arg2: BytesLike) => void, SynthetixAdapter>
}

let SynthetixAdapterBytecode: string | undefined = undefined;
if (typeof window === 'undefined') {
  SynthetixAdapterBytecode =
    '0x61012060405234801561001157600080fd5b50604051610d42380380610d42833981810160405260a081101561003457600080fd5b508051602082015160408301516060808501516080958601516001600160601b031995831b861690965292811b841660e05290811b831660c0521b1660a0526101005260805160601c60a05160601c60c05160601c60e05160601c61010051610c676100db600039806105bd5280610b24525080610605528061096552508061084a5280610b035250806106295280610aa852508061044a52806108265250610c676000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063863e5ad011610097578063c54efee511610066578063c54efee514610265578063e7c4569014610427578063f3863b971461042f578063f7d882b514610437576100f5565b8063863e5ad0146102295780638d064eae1461023157806390956d9914610255578063b23228cf1461025d576100f5565b8063257cb1a3116100d3578063257cb1a3146101f75780633ffc1591146101ff57806340da225d146102075780637b0f0a571461020f576100f5565b806303e38a2b146100fa578063080456c1146101ca578063131461c0146101ef575b600080fd5b6101c86004803603606081101561011057600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561013a57600080fd5b82018360208201111561014c57600080fd5b803590602001918460018302840111600160201b8311171561016d57600080fd5b919390929091602081019035600160201b81111561018a57600080fd5b82018360208201111561019c57600080fd5b803590602001918460018302840111600160201b831117156101bd57600080fd5b50909250905061043f565b005b6101d2610507565b604080516001600160e01b03199092168252519081900360200190f35b6101d261052b565b6101d261054f565b6101d2610573565b6101d2610597565b6102176105bb565b60408051918252519081900360200190f35b6101d26105df565b610239610603565b604080516001600160a01b039092168252519081900360200190f35b610239610627565b6101d261064b565b6102f26004803603606081101561027b57600080fd5b6001600160a01b03823516916001600160e01b031960208201351691810190606081016040820135600160201b8111156102b457600080fd5b8201836020820111156102c657600080fd5b803590602001918460018302840111600160201b831117156102e757600080fd5b50909250905061066f565b6040518086600281111561030257fe5b815260200180602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b8381101561034f578181015183820152602001610337565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561038e578181015183820152602001610376565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156103cd5781810151838201526020016103b5565b50505050905001858103825286818151815260200191508051906020019060200280838360005b8381101561040c5781810151838201526020016103f4565b50505050905001995050505050505050505060405180910390f35b610239610824565b610239610848565b6101d261086c565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a65760405162461bcd60e51b8152600401808060200182810382526032815260200180610bd96032913960400191505060405180910390fd5b60008060006104ea87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061089092505050565b935093505092506104fd888383866108cd565b5050505050505050565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b600060608080806001600160e01b031988166303e38a2b60e01b146106c55760405162461bcd60e51b8152600401808060200182810382526027815260200180610c0b6027913960400191505060405180910390fd5b60008060008061070a8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061089092505050565b604080516001808252818301909252949850929650909450925060208083019080368337019050509750818860008151811061074257fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509650808760008151811061078657fe5b60209081029190910101526040805160018082528183019092529081602001602082028036833701905050955083866000815181106107c157fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509450828560008151811061080557fe5b6020026020010181815250506000985050505050945094509450945094565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b6000806000808480602001905160808110156108ab57600080fd5b5080516020820151604083015160609093015191989097509195509350915050565b604080516002808252606080830184529260208301908036833701905050905083816000815181106108fb57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050818160018151811061092957fe5b6001600160a01b03928316602091820292909201810191909152604051633c13fa7b60e11b8152600481018281528451602483015284516060947f00000000000000000000000000000000000000000000000000000000000000001693637827f4f6938793928392604490920191858101910280838360005b838110156109ba5781810151838201526020016109a2565b505050509050019250505060006040518083038186803b1580156109dd57600080fd5b505afa1580156109f1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610a1a57600080fd5b8101908080516040519392919084600160201b821115610a3957600080fd5b908301906020820185811115610a4e57600080fd5b82518660208202830111600160201b82111715610a6a57600080fd5b82525081516020918201928201910280838360005b83811015610a97578181015183820152602001610a7f565b5050505090500160405250505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391e56b688783600081518110610ae357fe5b60200260200101518785600181518110610af957fe5b60200260200101517f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040518763ffffffff1660e01b815260040180876001600160a01b03168152602001868152602001858152602001848152602001836001600160a01b031681526020018281526020019650505050505050602060405180830381600087803b158015610bae57600080fd5b505af1158015610bc2573d6000803e3d6000fd5b505050506040513d60208110156104fd57600080fdfe4f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2063616c6c20746869732066756e6374696f6e7061727365417373657473466f72416374696f6e3a205f73656c6563746f7220696e76616c6964a26469706673582212201933b3f90719f0e970292d08f794e3c9156b0e0a1585d0735985ba624fb7feb764736f6c634300060c0033';
}

// prettier-ignore
export const SynthetixAdapter = contract<SynthetixAdapter, SynthetixAdapterArgs>(SynthetixAdapterBytecode)`
  constructor(address _integrationManager, address _synthetixPriceFeed, address _originator, address _synthetix, bytes32 _trackingCode)
  function CLAIM_REWARDS_SELECTOR() view returns (bytes4)
  function LEND_AND_STAKE_SELECTOR() view returns (bytes4)
  function LEND_SELECTOR() view returns (bytes4)
  function REDEEM_SELECTOR() view returns (bytes4)
  function STAKE_SELECTOR() view returns (bytes4)
  function TAKE_ORDER_SELECTOR() view returns (bytes4)
  function UNSTAKE_AND_REDEEM_SELECTOR() view returns (bytes4)
  function UNSTAKE_SELECTOR() view returns (bytes4)
  function getIntegrationManager() view returns (address integrationManager_)
  function getSynthetix() view returns (address synthetix_)
  function getSynthetixOriginator() view returns (address synthetixOriginator_)
  function getSynthetixPriceFeed() view returns (address synthetixPriceFeed_)
  function getSynthetixTrackingCode() view returns (bytes32 synthetixTrackingCode_)
  function parseAssetsForAction(address, bytes4 _selector, bytes _actionData) view returns (uint8 spendAssetsHandleType_, address[] spendAssets_, uint256[] spendAssetAmounts_, address[] incomingAssets_, uint256[] minIncomingAssetAmounts_)
  function takeOrder(address _vaultProxy, bytes _actionData, bytes)
`;
