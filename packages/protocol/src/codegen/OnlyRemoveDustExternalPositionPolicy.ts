/* eslint-disable */
// @ts-nocheck
import { BytesLike, BigNumber, BigNumberish } from 'ethers';
import { contract, Call, Send, AddressLike, Contract } from '@enzymefinance/ethers';

export type OnlyRemoveDustExternalPositionPolicyArgs = [
  _policyManager: AddressLike,
  _fundDeployer: AddressLike,
  _valueInterpreter: AddressLike,
  _wethToken: AddressLike,
  _pricelessAssetBypassTimelock: BigNumberish,
  _pricelessAssetBypassTimeLimit: BigNumberish,
];

// prettier-ignore
export interface OnlyRemoveDustExternalPositionPolicy extends Contract<OnlyRemoveDustExternalPositionPolicy> {
  activateForFund: Send<(arg0: AddressLike) => void, OnlyRemoveDustExternalPositionPolicy>
  addFundSettings: Send<(arg0: AddressLike, arg1: BytesLike) => void, OnlyRemoveDustExternalPositionPolicy>
  assetIsBypassableForFund: Call<(_comptrollerProxy: AddressLike, _asset: AddressLike) => boolean, OnlyRemoveDustExternalPositionPolicy>
  canDisable: Call<() => boolean, OnlyRemoveDustExternalPositionPolicy>
  getAssetBypassWindowStartForFund: Call<(_comptrollerProxy: AddressLike, _asset: AddressLike) => BigNumber, OnlyRemoveDustExternalPositionPolicy>
  getDustToleranceInWeth: Call<() => BigNumber, OnlyRemoveDustExternalPositionPolicy>
  getFundDeployer: Call<() => string, OnlyRemoveDustExternalPositionPolicy>
  getOwner: Call<() => string, OnlyRemoveDustExternalPositionPolicy>
  getPolicyManager: Call<() => string, OnlyRemoveDustExternalPositionPolicy>
  getPricelessAssetBypassTimeLimit: Call<() => BigNumber, OnlyRemoveDustExternalPositionPolicy>
  getPricelessAssetBypassTimelock: Call<() => BigNumber, OnlyRemoveDustExternalPositionPolicy>
  getPricelessAssetBypassValueInterpreter: Call<() => string, OnlyRemoveDustExternalPositionPolicy>
  getPricelessAssetBypassWethToken: Call<() => string, OnlyRemoveDustExternalPositionPolicy>
  identifier: Call<() => string, OnlyRemoveDustExternalPositionPolicy>
  implementedHooks: Call<() => BigNumber[], OnlyRemoveDustExternalPositionPolicy>
  setDustToleranceInWeth: Send<(_nextDustToleranceInWeth: BigNumberish) => void, OnlyRemoveDustExternalPositionPolicy>
  startAssetBypassTimelock: Send<(_asset: AddressLike) => void, OnlyRemoveDustExternalPositionPolicy>
  updateFundSettings: Send<(arg0: AddressLike, arg1: BytesLike) => void, OnlyRemoveDustExternalPositionPolicy>
  validateRule: Send<(_comptrollerProxy: AddressLike, arg1: BigNumberish, _encodedArgs: BytesLike) => boolean, OnlyRemoveDustExternalPositionPolicy>
}

let OnlyRemoveDustExternalPositionPolicyBytecode: string | undefined = undefined;
if (typeof window === 'undefined') {
  OnlyRemoveDustExternalPositionPolicyBytecode =
    '';
}

// prettier-ignore
export const OnlyRemoveDustExternalPositionPolicy = contract<OnlyRemoveDustExternalPositionPolicy, OnlyRemoveDustExternalPositionPolicyArgs>(OnlyRemoveDustExternalPositionPolicyBytecode)`
  constructor(address _policyManager, address _fundDeployer, address _valueInterpreter, address _wethToken, uint256 _pricelessAssetBypassTimelock, uint256 _pricelessAssetBypassTimeLimit)
  event DustToleranceInWethSet(uint256 nextDustToleranceInWeth)
  event PricelessAssetBypassed(address indexed comptrollerProxy, address indexed asset)
  event PricelessAssetTimelockStarted(address indexed comptrollerProxy, address indexed asset)
  function activateForFund(address)
  function addFundSettings(address, bytes)
  function assetIsBypassableForFund(address _comptrollerProxy, address _asset) view returns (bool isBypassable_)
  function canDisable() pure returns (bool canDisable_)
  function getAssetBypassWindowStartForFund(address _comptrollerProxy, address _asset) view returns (uint256 windowStart_)
  function getDustToleranceInWeth() view returns (uint256 dustToleranceInWeth_)
  function getFundDeployer() view returns (address fundDeployer_)
  function getOwner() view returns (address owner_)
  function getPolicyManager() view returns (address policyManager_)
  function getPricelessAssetBypassTimeLimit() view returns (uint256 timeLimit_)
  function getPricelessAssetBypassTimelock() view returns (uint256 timelock_)
  function getPricelessAssetBypassValueInterpreter() view returns (address valueInterpreter_)
  function getPricelessAssetBypassWethToken() view returns (address wethToken_)
  function identifier() pure returns (string identifier_)
  function implementedHooks() pure returns (uint8[] implementedHooks_)
  function setDustToleranceInWeth(uint256 _nextDustToleranceInWeth)
  function startAssetBypassTimelock(address _asset)
  function updateFundSettings(address, bytes)
  function validateRule(address _comptrollerProxy, uint8, bytes _encodedArgs) returns (bool isValid_)
`;
