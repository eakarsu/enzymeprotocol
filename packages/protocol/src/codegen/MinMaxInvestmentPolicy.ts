/* eslint-disable */
// @ts-nocheck
import { BytesLike, BigNumber, BigNumberish } from 'ethers';
import { contract, Call, Send, AddressLike, Contract } from '@enzymefinance/ethers';

export type MinMaxInvestmentPolicyArgs = [_policyManager: AddressLike];

// prettier-ignore
export interface MinMaxInvestmentPolicy extends Contract<MinMaxInvestmentPolicy> {
  activateForFund: Send<(arg0: AddressLike) => void, MinMaxInvestmentPolicy>
  addFundSettings: Send<(_comptrollerProxy: AddressLike, _encodedSettings: BytesLike) => void, MinMaxInvestmentPolicy>
  canDisable: Call<() => boolean, MinMaxInvestmentPolicy>
  getFundSettings: Call<(_comptrollerProxy: AddressLike) => { minInvestmentAmount: BigNumber, maxInvestmentAmount: BigNumber }, MinMaxInvestmentPolicy>
  getPolicyManager: Call<() => string, MinMaxInvestmentPolicy>
  identifier: Call<() => string, MinMaxInvestmentPolicy>
  implementedHooks: Call<() => BigNumber[], MinMaxInvestmentPolicy>
  passesRule: Call<(_comptrollerProxy: AddressLike, _investmentAmount: BigNumberish) => boolean, MinMaxInvestmentPolicy>
  updateFundSettings: Send<(_comptrollerProxy: AddressLike, _encodedSettings: BytesLike) => void, MinMaxInvestmentPolicy>
  validateRule: Send<(_comptrollerProxy: AddressLike, arg1: BigNumberish, _encodedArgs: BytesLike) => boolean, MinMaxInvestmentPolicy>
}

let MinMaxInvestmentPolicyBytecode: string | undefined = undefined;
if (typeof window === 'undefined') {
  MinMaxInvestmentPolicyBytecode =
    '0x60a060405234801561001057600080fd5b50604051610ab1380380610ab183398101604081905261002f91610055565b60601b6001600160601b0319166080526100a3565b805161004f8161008c565b92915050565b60006020828403121561006757600080fd5b60006100738484610044565b949350505050565b60006001600160a01b03821661004f565b6100958161007b565b81146100a057600080fd5b50565b60805160601c6109ec6100c560003980610179528061038552506109ec6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80636e3a9982116100665780636e3a9982146101095780637998a1c41461011c578063cbf54bb214610131578063ceb9a0ad14610146578063d44ad6cb146101595761009e565b80630d4d7510146100a35780630f5f6b4f146100a35780631ef92578146100b85780634fa4e54b146100d6578063579be718146100f6575b600080fd5b6100b66100b1366004610597565b61016e565b005b6100c0610204565b6040516100cd919061089d565b60405180910390f35b6100e96100e4366004610510565b610209565b6040516100cd91906108dc565b6100c06101043660046105ed565b610246565b6100c0610117366004610655565b6102a1565b6101246102fd565b6040516100cd91906108ab565b610139610329565b6040516100cd9190610885565b6100b6610154366004610510565b610380565b610161610383565b6040516100cd9190610877565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101bf5760405162461bcd60e51b81526004016101b6906108bc565b60405180910390fd5b6101ff8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103a792505050565b505050565b600190565b610211610476565b506001600160a01b0381166000908152602081815260409182902082518084019093528054835260010154908201525b919050565b60008061028884848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061044d92505050565b505091505061029786826102a1565b9695505050505050565b6001600160a01b03821660009081526020819052604081208054600190910154816102d25783111591506102f79050565b806102e2575082101590506102f7565b8184101580156102f25750808411155b925050505b92915050565b60408051808201909152601281527113525397d3505617d253959154d51351539560721b602082015290565b6040805160018082528183019092526060916020808301908036833701905050905060008160008151811061035a57fe5b6020026020010190600981111561036d57fe5b9081600981111561037a57fe5b90525090565b50565b7f000000000000000000000000000000000000000000000000000000000000000090565b600080828060200190518101906103be919061068f565b9150915080600014806103d057508082105b6103ec5760405162461bcd60e51b81526004016101b6906108cc565b6001600160a01b03841660008181526020819052604090819020848155600101839055517fed112d6c0e84b6900209ce5a4c04541bc63a517e0160888c447ee70be47ce60f9061043f90859085906108ea565b60405180910390a250505050565b600080600080848060200190518101906104679190610536565b93509350935093509193509193565b604051806040016040528060008152602001600081525090565b80356102f78161098c565b80516102f78161098c565b60008083601f8401126104b857600080fd5b50813567ffffffffffffffff8111156104d057600080fd5b6020830191508360018202830111156104e857600080fd5b9250929050565b80356102f7816109a0565b80356102f7816109ad565b80516102f7816109ad565b60006020828403121561052257600080fd5b600061052e8484610490565b949350505050565b6000806000806080858703121561054c57600080fd5b6000610558878761049b565b945050602061056987828801610505565b935050604061057a87828801610505565b925050606061058b87828801610505565b91505092959194509250565b6000806000604084860312156105ac57600080fd5b60006105b88686610490565b935050602084013567ffffffffffffffff8111156105d557600080fd5b6105e1868287016104a6565b92509250509250925092565b6000806000806060858703121561060357600080fd5b600061060f8787610490565b9450506020610620878288016104ef565b935050604085013567ffffffffffffffff81111561063d57600080fd5b610649878288016104a6565b95989497509550505050565b6000806040838503121561066857600080fd5b60006106748585610490565b9250506020610685858286016104fa565b9150509250929050565b600080604083850312156106a257600080fd5b60006106ae8585610505565b925050602061068585828601610505565b60006106cb8383610744565b505060200190565b6106dc81610918565b82525050565b60006106ed8261090b565b6106f7818561090f565b935061070283610905565b8060005b8381101561073057815161071a88826106bf565b975061072583610905565b925050600101610706565b509495945050505050565b6106dc81610923565b6106dc81610941565b60006107588261090b565b610762818561090f565b935061077281856020860161094c565b61077b81610978565b9093019392505050565b600061079260298361090f565b7f4f6e6c792074686520506f6c6963794d616e616765722063616e206d616b65208152681d1a1a5cc818d85b1b60ba1b602082015260400192915050565b60006107dd604c8361090f565b7f5f5f73657446756e6453657474696e67733a206d696e496e766573746d656e7481527f416d6f756e74206d757374206265206c657373207468616e206d6178496e766560208201526b1cdd1b595b9d105b5bdd5b9d60a21b604082015260600192915050565b80516040830190610855848261086e565b506020820151610868602085018261086e565b50505050565b6106dc8161093e565b602081016102f782846106d3565b6020808252810161089681846106e2565b9392505050565b602081016102f7828461073b565b60208082528101610896818461074d565b602080825281016102f781610785565b602080825281016102f7816107d0565b604081016102f78284610844565b604081016108f8828561086e565b610896602083018461086e565b60200190565b5190565b90815260200190565b60006102f782610932565b151590565b8061024181610982565b6001600160a01b031690565b90565b60006102f782610928565b60005b8381101561096757818101518382015260200161094f565b838111156108685750506000910152565b601f01601f191690565b600a811061038057fe5b61099581610918565b811461038057600080fd5b600a811061038057600080fd5b6109958161093e56fea26469706673582212202ffd98cb536624ccebc18b3b7c58c957128e41782e6485f22baff8d4d46b8d7c64736f6c634300060c0033';
}

// prettier-ignore
export const MinMaxInvestmentPolicy = contract<MinMaxInvestmentPolicy, MinMaxInvestmentPolicyArgs>(MinMaxInvestmentPolicyBytecode)`
  constructor(address _policyManager)
  event FundSettingsSet(address indexed comptrollerProxy, uint256 minInvestmentAmount, uint256 maxInvestmentAmount)
  function activateForFund(address)
  function addFundSettings(address _comptrollerProxy, bytes _encodedSettings)
  function canDisable() pure returns (bool canDisable_)
  function getFundSettings(address _comptrollerProxy) view returns (tuple(uint256 minInvestmentAmount, uint256 maxInvestmentAmount) fundSettings_)
  function getPolicyManager() view returns (address policyManager_)
  function identifier() pure returns (string identifier_)
  function implementedHooks() pure returns (uint8[] implementedHooks_)
  function passesRule(address _comptrollerProxy, uint256 _investmentAmount) view returns (bool isValid_)
  function updateFundSettings(address _comptrollerProxy, bytes _encodedSettings)
  function validateRule(address _comptrollerProxy, uint8, bytes _encodedArgs) returns (bool isValid_)
`;
