{
  "address": "0x3904b8f5b0F49cD206b7d5AABeE5D1F37eE15D8d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_constructData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeReserveLib",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "transactionHash": "0x2b016479b75a9406b1c67431d60dad4257d7a3f07769ef311cc2710026b5f755",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x3904b8f5b0F49cD206b7d5AABeE5D1F37eE15D8d",
    "transactionIndex": 0,
    "gasUsed": "145924",
    "logsBloom": "0x
    "blockHash": "0xc90f47ad9fa301ff7d8503b53200ed88aee703f7ea6c52a0770c043bb8ff236c",
    "transactionHash": "0x2b016479b75a9406b1c67431d60dad4257d7a3f07769ef311cc2710026b5f755",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 14508027,
        "transactionHash": "0x2b016479b75a9406b1c67431d60dad4257d7a3f07769ef311cc2710026b5f755",
        "address": "0x3904b8f5b0F49cD206b7d5AABeE5D1F37eE15D8d",
        "topics": [
          "0x637d0ba5806b2c873952a12cd23e7cf28669dba115b2ded43df3d2d75c71e8c1"
        ],
        "data": "0x0000000000000000000000003c15538ed063e688c8df3d571cb7a0062d2fb18d",
        "logIndex": 0,
        "blockHash": "0xc90f47ad9fa301ff7d8503b53200ed88aee703f7ea6c52a0770c043bb8ff236c"
      }
    ],
    "blockNumber": 14508027,
    "cumulativeGasUsed": "145924",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x19ab453c000000000000000000000000c582bc0317dbb0908203541971a358c44b1f3766",
    "0x3C15538ED063e688c8DF3d571Cb7a0062d2fB18D"
  ],
  "solcInputHash": "e128c99a7ad98ab17bfe5eac6103458b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_constructData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeReserveLib\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"details\":\"Adapted from the recommended implementation of a Proxy in EIP-1822, updated for solc 0.6.12, and using the EIP-1967 storage slot for the proxiable implementation. See: https://eips.ethereum.org/EIPS/eip-1822 See: https://eips.ethereum.org/EIPS/eip-1967\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ProtocolFeeReserveProxy Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A proxy contract for a protocol fee reserve, slightly modified from EIP-1822\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/protocol-fee-reserve/ProtocolFeeReserveProxy.sol\":\"ProtocolFeeReserveProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/persistent/protocol-fee-reserve/ProtocolFeeReserveProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./utils/ProtocolFeeProxyConstants.sol\\\";\\nimport \\\"./utils/ProxiableProtocolFeeReserveLib.sol\\\";\\n\\n/// @title ProtocolFeeReserveProxy Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A proxy contract for a protocol fee reserve, slightly modified from EIP-1822\\n/// @dev Adapted from the recommended implementation of a Proxy in EIP-1822, updated for solc 0.6.12,\\n/// and using the EIP-1967 storage slot for the proxiable implementation.\\n/// See: https://eips.ethereum.org/EIPS/eip-1822\\n/// See: https://eips.ethereum.org/EIPS/eip-1967\\ncontract ProtocolFeeReserveProxy is ProtocolFeeProxyConstants {\\n    constructor(bytes memory _constructData, address _protocolFeeReserveLib) public {\\n        // Validate constants\\n        require(\\n            EIP_1822_PROXIABLE_UUID == bytes32(keccak256(\\\"mln.proxiable.protocolFeeReserveLib\\\")),\\n            \\\"constructor: Invalid EIP_1822_PROXIABLE_UUID\\\"\\n        );\\n        require(\\n            EIP_1967_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1),\\n            \\\"constructor: Invalid EIP_1967_SLOT\\\"\\n        );\\n\\n        require(\\n            ProxiableProtocolFeeReserveLib(_protocolFeeReserveLib).proxiableUUID() ==\\n                EIP_1822_PROXIABLE_UUID,\\n            \\\"constructor: _protocolFeeReserveLib not compatible\\\"\\n        );\\n\\n        assembly {\\n            sstore(EIP_1967_SLOT, _protocolFeeReserveLib)\\n        }\\n\\n        (bool success, bytes memory returnData) = _protocolFeeReserveLib.delegatecall(\\n            _constructData\\n        );\\n        require(success, string(returnData));\\n    }\\n\\n    fallback() external payable {\\n        assembly {\\n            let contractLogic := sload(EIP_1967_SLOT)\\n            calldatacopy(0x0, 0x0, calldatasize())\\n            let success := delegatecall(\\n                sub(gas(), 10000),\\n                contractLogic,\\n                0x0,\\n                calldatasize(),\\n                0,\\n                0\\n            )\\n            let retSz := returndatasize()\\n            returndatacopy(0, 0, retSz)\\n            switch success\\n                case 0 {\\n                    revert(0, retSz)\\n                }\\n                default {\\n                    return(0, retSz)\\n                }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8e1e5913a675b497ed038ba4478c209c89d64d2d642eb6fa0a51082392e7558f\",\"license\":\"GPL-3.0\"},\"contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title ProtocolFeeProxyConstants Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Constant values used in ProtocolFee proxy-related contracts\\nabstract contract ProtocolFeeProxyConstants {\\n    // `bytes32(keccak256('mln.proxiable.protocolFeeReserveLib'))`\\n    bytes32\\n        internal constant EIP_1822_PROXIABLE_UUID = 0xbc966524590ce702cc9340e80d86ea9095afa6b8eecbb5d6213f576332239181;\\n    // `bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)`\\n    bytes32\\n        internal constant EIP_1967_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n}\\n\",\"keccak256\":\"0xd57a23b8978cfd81fcf09a3484b7625b311c5fe14b304bd9a497a869e41d1527\",\"license\":\"GPL-3.0\"},\"contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\nimport \\\"./ProtocolFeeProxyConstants.sol\\\";\\n\\npragma solidity 0.6.12;\\n\\n/// @title ProxiableProtocolFeeReserveLib Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A contract that defines the upgrade behavior for ProtocolFeeReserveLib instances\\n/// @dev The recommended implementation of the target of a proxy according to EIP-1822 and EIP-1967\\n/// See: https://eips.ethereum.org/EIPS/eip-1822\\n/// See: https://eips.ethereum.org/EIPS/eip-1967\\nabstract contract ProxiableProtocolFeeReserveLib is ProtocolFeeProxyConstants {\\n    /// @dev Updates the target of the proxy to be the contract at _nextProtocolFeeReserveLib\\n    function __updateCodeAddress(address _nextProtocolFeeReserveLib) internal {\\n        require(\\n            ProxiableProtocolFeeReserveLib(_nextProtocolFeeReserveLib).proxiableUUID() ==\\n                bytes32(EIP_1822_PROXIABLE_UUID),\\n            \\\"__updateCodeAddress: _nextProtocolFeeReserveLib not compatible\\\"\\n        );\\n        assembly {\\n            sstore(EIP_1967_SLOT, _nextProtocolFeeReserveLib)\\n        }\\n    }\\n\\n    /// @notice Returns a unique bytes32 hash for ProtocolFeeReserveLib instances\\n    /// @return uuid_ The bytes32 hash representing the UUID\\n    function proxiableUUID() public pure returns (bytes32 uuid_) {\\n        return EIP_1822_PROXIABLE_UUID;\\n    }\\n}\\n\",\"keccak256\":\"0xefc9befd638e13010c556c2d691949a3ce51171de8007e2daa536b368ad78868\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103d13803806103d18339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b506040526020015191506100ed9050565b7fbc966524590ce702cc9340e80d86ea9095afa6b8eecbb5d6213f57633223918160001b816001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561014a57600080fd5b505afa15801561015e573d6000803e3d6000fd5b505050506040513d602081101561017457600080fd5b5051146101b25760405162461bcd60e51b815260040180806020018281038252603281526020018061039f6032913960400191505060405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5560006060826001600160a01b0316846040518082805190602001908083835b602083106102135780518252601f1990920191602091820191016101f4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610273576040519150601f19603f3d011682016040523d82523d6000602084013e610278565b606091505b50915091508181906103085760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156102cd5781810151838201526020016102b5565b50505050905090810190601f1680156102fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050505060848061031b6000396000f3fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc543660008037600080366000846127105a03f43d806000803e818015604957816000f35b816000fdfea26469706673582212206546d9db02a97fa8bfefacaf3ab76fd3a296019b999bd3e3b654a632a8d99eb764736f6c634300060c0033636f6e7374727563746f723a205f70726f746f636f6c466565526573657276654c6962206e6f7420636f6d70617469626c65",
  "deployedBytecode": "0x60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc543660008037600080366000846127105a03f43d806000803e818015604957816000f35b816000fdfea26469706673582212206546d9db02a97fa8bfefacaf3ab76fd3a296019b999bd3e3b654a632a8d99eb764736f6c634300060c0033",
  "devdoc": {
    "author": "Enzyme Council <security@enzyme.finance>",
    "details": "Adapted from the recommended implementation of a Proxy in EIP-1822, updated for solc 0.6.12, and using the EIP-1967 storage slot for the proxiable implementation. See: https://eips.ethereum.org/EIPS/eip-1822 See: https://eips.ethereum.org/EIPS/eip-1967",
    "kind": "dev",
    "methods": {},
    "title": "ProtocolFeeReserveProxy Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A proxy contract for a protocol fee reserve, slightly modified from EIP-1822",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}